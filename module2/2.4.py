# При присвоєнні імені змінній необхідно дотримуватись деяких чітких правил:

# ім'я змінної має складатися з великих або малих літер, цифр та символу _ (підкреслення)
# ім'я змінної має починатися з літери;
# символ підкреслення — це буква;
# великі та малі літери розглядаються як різні (трохи інакше, ніж у реальному світі – Alice та ALICE – це одне і теж ім'я, але в Python це два різних імені змінних, а отже, дві різні змінні);
# ім’я змінної не має бути жодним з зарезервованих слів Python (ключових слів – про це ми розповімо пізніше).
# Зверніть увагу, що такі ж вимоги поширюються і на імена функцій.

# А тепер про деякі помилкові імена:

# 10t (не починається з літери)
# !important (не починається з літери)
# exchange rate (містить пробіл).

# PEP 8 -- Style Guide for Python Code рекомендує наступний порядок іменування змінних та функцій у мові Python:

# імена змінних повинні бути написані малими літерами, з розділенням слів символом підкреслення для покращення читабельності (наприклад, var, my_variable)
# імена функцій дотримуються тих самих правил, що й імена змінних (наприклад, fun, my_function)
# також можна використовувати змішаний регістр (наприклад, myVariable), але тільки в ситуаціях, коли це вже є загальноприйнятим стилем, щоб зберегти зворотну сумісність з прийнятою конвенцією.

# Подивіться на список слів, які відіграють особливу роль у кожній програмі Python.

# ['False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']

# Вони називаються ключовими словами або (точніше) зарезервованими ключовими словами. Вони зарезервовані, тому що ви не повинні використовувати їх як імена: ні для ваших змінних, ні для функцій, ні для будь-яких інших іменованих об'єктів, які ви захочете створити.

# Значення зарезервованого слова є заздалегідь визначеним і не може бути змінено жодним чином.

# a = 3.0
# b = 4.0
# c = (a ** 2 + b ** 2) ** 0.5
# print("c =", c)



# 2.4.7   LAB   Змінні
# john = 3
# mary = 5
# adam = 6

# print(john, mary, adam, sep=",")

# total_apples = john + mary + adam

# print(total_apples)
# print("Загальна кількість яблук: ", total_apples)


# Розширені оператори присвоєння
# i += 2 * j
# var /= 2


# 2.4.9   LAB   Змінні ‒ простий конвертер
# kilometers = 12.25
# miles = 7.38

# miles_to_kilometers = miles * 1.61
# kilometers_to_miles = kilometers / 1.61

# print(miles, "миль", round(miles_to_kilometers, 2), "кілометрів")
# print(kilometers, "кілометрів є", round(kilometers_to_miles, 2), "миль")



# 2.4.10   LAB   Оператори та вирази
# x = -1
# x = float(x)
# y = 3 * x**3 - 2 * x**2 + 3* x -1
# print("y =", y)


# var = 2
# var = 3
# print(var)

# averylongVariablename = 5
# Del = 5
# del = 5

# a = 6
# b = 3
# a /= 2 * b
# print(a)